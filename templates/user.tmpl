{{define "title"}}Internal: User ({{formatUserName .User}}){{end}}
{{define "content"}}
    <div class="column is-10" style="min-height: 88vh">
        <section class="hero is-info welcome is-small">
            <div class="hero-body">
                <div class="container">
                    <h1 class="title">{{formatUserName .User}}</h1>
                </div>
            </div>
        </section>
        <br>
        <div class="columns box" style="height: fit-content">
            <div class="column is-2">
                <figure class="avatar">
                    <img src="{{.User.Avatar}}" alt="{{.User.Avatar}}" width="128px"
                                                 height="128px"/>
                </figure>
                <div class="buttons" style="display: block">
                    {{if eq .User.DeletedBy.UserID -1}}
                        <a class="button is-info is-outlined" onclick="resetPasswordModal()">
                            Reset password
                        </a>
                        <a class="button is-info is-outlined" onclick="editUserModal()">
                            Edit
                        </a>
                        {{if .User.Enabled}}
                            <a class="button is-warning is-outlined" onclick="disableUserModal()">
                                Disable
                            </a>
                        {{else}}
                            <a class="button is-warning is-outlined" onclick="enableUserModal()">
                                Enable
                            </a>
                        {{end}}
                        <a class="button is-danger is-outlined" onclick="deleteUserModal()">
                            Delete
                        </a>
                    {{end}}
                </div>
            </div>
            <div class="column">
                <p id="message" style="color: green"></p>
                <p id="error" style="color: red"></p>
                {{$roleAdmin := checkPermission .UserPermissions "ManageMembers.Group"}}
                {{$permissionAdmin := checkPermission .UserPermissions "ManageMembers.Permission"}}
                {{with .User}}
                    <p>
                    {{getUserModifierField .DeletedBy .DeletedAt "Deleted"}}
                    User ID: {{.UserID}}<br>
                    First name: {{.Firstname}}<br>
                    Nickname: {{.Nickname}}<br>
                    Last name: {{.Lastname}}<br>
                    Username: {{.Username}}<br>
                    Email: {{.Email}}<br>
                    Enabled: {{.Enabled}}<br>
                    Reset password required: {{.ResetPw}}<br>
                    Login type: {{.LoginType}}<br>
                    {{if .LDAPUsername.Valid}}
                        LDAP (Active Directory) username: {{.LDAPUsername.String}}<br>
                    {{end}}
                    Avatar source: {{if .UseGravatar}}Using gravatar{{else}}Using local file{{end}}<br>
                    {{if gt (len .Permissions) 0}}
                    Permissions: <ol>
                        {{range .Permissions}}
                            <li style='list-style-type: none;'><span class='tab'></span>
                                {{if $permissionAdmin}}
                                    <a href="/internal/permission/{{.PermissionID}}">{{.Name}}</a>
                                {{else}}
                                    {{.Name}}
                                {{end}}
                            </li>
                        {{end}}
                    </ol><br>
                    {{end}}
                    {{if gt (len .Roles) 0}}
                    Roles: <ol>
                        {{range .Roles}}
                            <li style='list-style-type: none;'><span class='tab'></span>
                                {{if $roleAdmin}}
                                    <a href="/internal/role/{{.RoleID}}">{{.Name}}</a>
                                {{else}}
                                    {{.Name}}
                                {{end}}
                            </li>
                        {{end}}
                    </ol><br>
                    {{end}}
                    {{if .LastLogin.Valid}}
                        Last login at {{.LastLogin.String}}<br>
                    {{end}}
                    {{getUserModifierField .CreatedBy .CreatedAt "Created"}}
                    {{getUserModifierField .UpdatedBy .UpdatedAt "Updated"}}
                    </p>
                {{end}}
            </div>
        </div>
    </div>
    {{if not .User.DeletedAt.Valid}}
        {{template "modals" .}}
    {{end}}
{{end}}

{{define "modals"}}
    <div id="resetPasswordModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title">Are you sure you want to reset the password?</p>
                            <p>An email will be sent to the user for
                                them to reset their password</p>
                            <a class="button is-danger" onclick="resetPassword()">Reset password</a>
                        </div>
                    </div>
                </article>
            </div>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>
    <div id="editUserModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title">Are you sure you want to edit this user?</p>
                            <p>Coming soon!</p>
{{/*                            <a class="button is-danger" onclick="editUser()">Edit user</a>*/}}
                        </div>
                    </div>
                </article>
            </div>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>
    {{if .User.Enabled}}
        <div id="disableUserModal" class="modal">
            <div class="modal-background"></div>
            <div class="modal-content">
                <div class="box">
                    <article class="media">
                        <div class="media-content">
                            <div class="content">
                                <p class="title">Are you sure you want to disable this account?</p>
                                <p>This user won't be able to log in until it is re-enabled</p>
                                <a class="button is-danger" onclick="disableUser()">Disable user</a>
                            </div>
                        </div>
                    </article>
                </div>
            </div>
            <button class="modal-close is-large" aria-label="close"></button>
        </div>
    {{else}}
        <div id="enableUserModal" class="modal">
            <div class="modal-background"></div>
            <div class="modal-content">
                <div class="box">
                    <article class="media">
                        <div class="media-content">
                            <div class="content">
                                <p class="title">Are you sure you want to enable this account?</p>
                                <p>This user will be able to log in until it is re-disabled</p>
                                <a class="button is-danger" onclick="enableUser()">Enable user</a>
                            </div>
                        </div>
                    </article>
                </div>
            </div>
            <button class="modal-close is-large" aria-label="close"></button>
        </div>
    {{end}}
    <div id="deleteUserModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title">Are you sure you want to disable this account?</p>
                            <p>This user won't be able to log in until it is re-enabled</p>
                            <a class="button is-danger" onclick="deleteUser()">Delete user</a>
                        </div>
                    </div>
                </article>
            </div>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>
    <script>
        document.querySelectorAll(
            ".modal-background, .modal-close,.modal-card-head .delete, .modal-card-foot .button"
        ).forEach(($el) => {
            const $modal = $el.closest(".modal");
            $el.addEventListener("click", () => {
                $modal.classList.remove("is-active");
            });
        });

        function resetPasswordModal() {
            document.getElementById("resetPasswordModal").classList.add("is-active");
        }

        {{if .User.Enabled}}
            function disableUserModal() {
                document.getElementById("disableUserModal").classList.add("is-active");
            }
        {{else}}
            function enableUserModal() {
                document.getElementById("enableUserModal").classList.add("is-active");
            }
        {{end}}
        function editUserModal() {
            document.getElementById("editUserModal").classList.add("is-active");
        }

        function deleteUserModal() {
            document.getElementById("deleteUserModal").classList.add("is-active");
        }

        function resetPassword() {
            $.ajax({
                url: '/internal/user/{{.User.UserID}}/reset',
                type: 'post',
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    document.getElementById("resetPasswordModal").classList.remove("is-active");
                    $("#message").html(data.message);
                    $("#error").html(data.error);
                },
            })
        }
        {{if .User.Enabled}}
            function disableUser() {
                // unimplemented for now
            }
        {{else}}
            function enableUser() {
                // unimplemented for now
            }
        {{end}}
        function editUser() {
            // unimplemented for now
        }

        function deleteUser() {
            // unimplemented for now
        }
    </script>
{{end}}